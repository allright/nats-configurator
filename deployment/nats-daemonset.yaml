apiVersion: v1
kind: Namespace
metadata:
  name: nats
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: default-view
  namespace: nats
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: view
subjects:
  - kind: ServiceAccount
    name: default
    namespace: nats
---
apiVersion: v1
data:
  nats-template.conf: |
    {
      "cluster": {
        "name": "nats",
        "no_advertise": true,
        "port": 6222
      },
      "http_port": 8222,
      "lame_duck_duration": "30s",
      "lame_duck_grace_period": "10s",
      "pid_file": "/etc/nats-exchange/nats.pid",
      "port": 4222
    }
kind: ConfigMap
metadata:
  labels:
    app: nats-daemonset
  name: nats-config
  namespace: nats
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: nats
  namespace: nats

spec:
  selector:
    matchLabels:
      app: nats-daemonset
  template:
    metadata:
      labels:
        app: nats-daemonset
    spec:
      imagePullSecrets:
        - name: nats-cred

      volumes:
        - configMap:
            name: nats-config
          name: config

        - name: exchange
          emptyDir:
            medium: Memory

      shareProcessNamespace: true

      containers:
        - name: nats-configurator
          image: allright/nats-configurator:1.0.0
          args: [ "-namespace", "nats",
                  "-pod-ip", "$(POD_IP)",
                  "-pod-name", "$(POD_NAME)",
                  "-pod-label", "app=nats-daemonset",
                  "-nats-config-template", "/etc/nats-config-template/nats-template.conf",
                  "-nats-config", "/etc/nats-exchange/nats.conf",
                  "-nats-pid-file", "/etc/nats-exchange/nats.pid",
                  "-nats-routes-port", "6222",
                  "-refresh-interval", "3s" ]

          env:
            - name: KUBERNETES_SERVICE_HOST
              value: "kubernetes.default.svc"
            - name: KUBERNETES_SERVICE_PORT
              value: "443"
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name

          volumeMounts:
            - mountPath: /etc/nats-config-template
              name: config
            - mountPath: /etc/nats-exchange
              name: exchange

        - name: nats
          image: nats:2.10.18-alpine
          args: [ "--config","/etc/nats-exchange/nats.conf" ]

          ports:
            - containerPort: 4222
              name: nats
            - containerPort: 6222
              name: cluster
            - containerPort: 8222
              name: monitor

          volumeMounts:
            - mountPath: /etc/nats-exchange
              name: exchange

          lifecycle:
            preStop:
              exec:
                command: [ "nats-server","-sl=ldm=/etc/nats-exchange/nats.pid" ]

#          readinessProbe:
#            failureThreshold: 3
#            httpGet:
#              path: /healthz?js-server-only=true
#              port: monitor
#            initialDelaySeconds: 10
#            periodSeconds: 10
#            successThreshold: 1
#            timeoutSeconds: 5
#
##          startupProbe:
##            failureThreshold: 90
##            httpGet:
##              path: /healthz
##              port: monitor
##            initialDelaySeconds: 2
##            periodSeconds: 10
##            successThreshold: 1
##            timeoutSeconds: 5
#
#          livenessProbe:
#            failureThreshold: 3
#            httpGet:
#              path: /healthz?js-enabled-only=true
#              port: monitor
#            initialDelaySeconds: 10
#            periodSeconds: 30
#            successThreshold: 1
#            timeoutSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: nats-local
  namespace: nats
spec:
  ports:
    - appProtocol: tcp
      name: nats
      port: 4222
      targetPort: nats
  internalTrafficPolicy: Local
  selector:
    app: nats-daemonset
